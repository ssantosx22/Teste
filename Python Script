import sys
import time
import psutil

if len(sys.argv) != 2:
    print("Usage: python monitor.py <process_name_or_id>")
    sys.exit(1)

process_name_or_id = sys.argv[1]

def get_process(name_or_id):
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.info['pid'] == int(name_or_id) or proc.info['name'] == name_or_id:
            return proc
    return None

process = get_process(process_name_or_id)

if not process:
    print(f"Process {process_name_or_id} not found.")
    sys.exit(1)

while True:
    try:
        cpu_usage = process.cpu_percent(interval=1)
        memory_info = process.memory_info()
        memory_usage = memory_info.rss / (1024 * 1024)  # Convert to MB
        print(f"CPU: {cpu_usage}% - Memory: {memory_usage:.2f} MB")
        time.sleep(5)
    except psutil.NoSuchProcess:
        print(f"Process {process_name_or_id} terminated.")
        break